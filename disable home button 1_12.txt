https://stackoverflow.com/questions/45860508/how-to-put-windowmanager-content-behind-navigation-bar

windowDrawsSystemBarBackgrounds

System Overlay not covering Status bar & Navigation bar Android

https://stackoverflow.com/questions/66040101/system-overlay-not-covering-status-bar-navigation-bar-android
https://stackoverflow.com/questions/33386897/how-to-hide-the-navigation-bar-using-a-system-overlay-window


package com.demo.mynewBG;

import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.content.pm.ActivityInfo;
import android.graphics.PixelFormat;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.provider.Settings;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {

    TextView tvHello;
    WindowManager windowManager;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Window window = getWindow();
        window.getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_HIDE_NAVIGATION);
        window.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
        window.setFlags(WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN, WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN);
        WindowManager.LayoutParams layoutParams = new WindowManager.LayoutParams();
        layoutParams.width = WindowManager.LayoutParams.MATCH_PARENT;
        layoutParams.height = WindowManager.LayoutParams.MATCH_PARENT;
        layoutParams.format = PixelFormat.TRANSLUCENT;
        layoutParams.flags |= WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN | WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS;
        layoutParams.screenOrientation = ActivityInfo.SCREEN_ORIENTATION_PORTRAIT;

//        windowManager = (WindowManager) getSystemService(WINDOW_SERVICE);
//        ViewGroup valetModeWindow = (ViewGroup) View.inflate(this, R.layout.dummy_layout, null);
//        windowManager.addView(valetModeWindow, layoutParams);


//        setContentView(this, R.layout.activity_splash)
//        binding.splashRoot.systemUiVisibility = (
//        or View.SYSTEM_UI_FLAG_LOW_PROFILE
//        or View.SYSTEM_UI_FLAG_LAYOUT_STABLE
//        or View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
//        or View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
//        or View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
//        or View.SYSTEM_UI_FLAG_FULLSCREEN
//        or View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY
//                )

        tvHello = findViewById(R.id.tv_hello);

        tvHello.setOnClickListener(new View.OnClickListener() {
            @RequiresApi(api = Build.VERSION_CODES.M)
            @Override
            public void onClick(View view) {
                // Start the overlay service
                // 2. Get permissions by asking
                if (!Settings.canDrawOverlays(MainActivity.this)) {
                    Intent intent = new Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION, Uri.parse("package:" + getPackageName()));
                    startActivityForResult(intent, 1234);
                } else {
                    showCustomPopupMenu();
                }
//                Intent intent = new Intent(MainActivity.this, OverlayService.class);
//                startService(intent);

            }
        });
    }

    // 1. Show view
    private void showCustomPopupMenu() {
        windowManager = (WindowManager) getSystemService(WINDOW_SERVICE);
        // LayoutInflater layoutInflater = (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        // View view = layoutInflater.inflate(R.layout.dummy_layout, null);
        ViewGroup valetModeWindow = (ViewGroup) View.inflate(this, R.layout.dummy_layout, null);
        int LAYOUT_FLAG;
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            LAYOUT_FLAG = WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY;
        } else {
            LAYOUT_FLAG = WindowManager.LayoutParams.TYPE_PHONE;
        }
        WindowManager.LayoutParams params = new WindowManager.LayoutParams(
                WindowManager.LayoutParams.MATCH_PARENT,
                WindowManager.LayoutParams.MATCH_PARENT,
                LAYOUT_FLAG,
//                WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE,
//                PixelFormat.TRANSLUCENT);
//                WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE
                         WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL
                        | WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH
                        | WindowManager.LayoutParams.FLAG_FULLSCREEN
                        | WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN
                        | WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS,
                PixelFormat.OPAQUE);

        //windowDrawsSystemBarBackgrounds

        params.gravity = Gravity.CENTER;
        params.x = 0;
        params.y = 0;
        int flag =  View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY
                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION;
        valetModeWindow.setSystemUiVisibility(flag);
        windowManager.addView(valetModeWindow, params);
    }


}